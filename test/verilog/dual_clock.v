/* AUTOMATICALLY GENERATED VERILOG-2001 SOURCE CODE.
** GENERATED BY CLASH 1.8.2. DO NOT MODIFY.
*/
`default_nettype none
`timescale 100fs/100fs
module topEntity
    ( // Inputs
      input wire  clk1 // clock
    , input wire  rst1 // reset
    , input wire  en1 // enable
    , input wire  clk2 // clock
    , input wire  rst2 // reset
    , input wire  en2 // enable

      // Outputs
    , output wire signed [63:0] result_0
    , output wire signed [63:0] result_1
    );
  reg signed [63:0] b = (64'sd1);
  reg signed [63:0] a = (64'sd0);
  wire [127:0] result;

  // register begin
  always @(posedge clk2 or  posedge  rst2) begin : b_register
    if ( rst2) begin
      b <= (64'sd1);
    end else if (en2) begin
      b <= b;
    end
  end
  // register end

  // register begin
  always @(posedge clk1 or  posedge  rst1) begin : a_register
    if ( rst1) begin
      a <= (64'sd0);
    end else if (en1) begin
      a <= a;
    end
  end
  // register end

  assign result = {a,   b};

  assign result_0 = $signed(result[127:64]);

  assign result_1 = $signed(result[63:0]);


endmodule

