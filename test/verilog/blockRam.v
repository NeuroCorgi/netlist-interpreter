/* AUTOMATICALLY GENERATED VERILOG-2001 SOURCE CODE.
** GENERATED BY CLASH 1.8.2. DO NOT MODIFY.
*/
`default_nettype none
`timescale 100fs/100fs
module topEntity
    ( // Inputs
      input wire  clk // clock
    , input wire  en // enable
    , input wire [1:0] rd
    , input wire [6:0] wrM

      // Outputs
    , output wire [3:0] result_0
    , output wire [3:0] result_1
    );
  reg [3:0] c$app_arg;
  wire [3:0] result_4;
  reg [3:0] c$app_arg_0;
  wire [3:0] result_5;
  wire [5:0] a1;
  wire [1:0] wr;
  wire [3:0] din;
  wire [5:0] a1_0;
  wire signed [63:0] lvl;
  wire [6:0] wrM0;
  wire  lvl1;
  wire [5:0] ds2;
  wire signed [63:0] lvl2;
  wire [3:0] lvl3;
  wire [1:0] c$i_0;
  wire [7:0] result;

  // blockRamBlob begin
  reg [3:0] c$app_arg_RAM [0:4-1];

  reg [15:0] ram_init;
  integer i;
  initial begin
    ram_init = {4'b0100,   4'b0101,   4'b0110,   4'b0111};
    for (i=0; i < 4; i = i + 1) begin
      c$app_arg_RAM[4-1-i] = ram_init[i*4+:4];
    end
  end

  always @(posedge clk) begin : c$app_arg_blockRam
    if (lvl1) begin
      c$app_arg_RAM[lvl2] <= lvl3;
    end
    c$app_arg <= c$app_arg_RAM[lvl];
  end
  // blockRamBlob end

  assign result_4 = c$app_arg;

  // blockRamBlob begin
  reg [3:0] c$app_arg_0_RAM [0:4-1];

  reg [15:0] ram_init_0;
  integer i_0;
  initial begin
    ram_init_0 = {4'b0100,   4'b0101,   4'b0110,   4'b0111};
    for (i_0=0; i_0 < 4; i_0 = i_0 + 1) begin
      c$app_arg_0_RAM[4-1-i_0] = ram_init_0[i_0*4+:4];
    end
  end

  always @(posedge clk) begin : c$app_arg_0_blockRam
    if (lvl1 & en) begin
      c$app_arg_0_RAM[lvl2] <= lvl3;
    end
    if (en) begin
      c$app_arg_0 <= c$app_arg_0_RAM[lvl];
    end
  end
  // blockRamBlob end

  assign result_5 = c$app_arg_0;

  assign result = {result_4,   result_5};

  assign a1 = wrM[5:0];

  assign wr = a1[5:4];

  assign din = a1[3:0];

  assign a1_0 = wrM0[5:0];

  assign lvl = $unsigned({{(64-2) {1'b0}},rd});

  assign wrM0 = wrM[6:6] ? {1'b1,{wr,
                                  (din)}} : {1'b0,6'bxxxxxx};

  assign lvl1 = wrM0[6:6] ? 1'b1 : 1'b0;

  assign ds2 = wrM0[6:6] ? a1_0 : {{2 {1'bx}},
                                   4'bxxxx};

  assign c$i_0 = ds2[5:4];

  assign lvl2 = $unsigned({{(64-2) {1'b0}},c$i_0});

  assign lvl3 = ds2[3:0];

  assign result_0 = result[7:4];

  assign result_1 = result[3:0];


endmodule

