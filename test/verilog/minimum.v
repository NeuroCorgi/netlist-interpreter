/* AUTOMATICALLY GENERATED VERILOG-2001 SOURCE CODE.
** GENERATED BY CLASH 1.8.2. DO NOT MODIFY.
*/
`default_nettype none
`timescale 100fs/100fs
module topEntity
    ( // Inputs
      input wire signed [63:0] c$arg_0
    , input wire signed [63:0] c$arg_1
    , input wire signed [63:0] c$arg_2

      // Outputs
    , output wire signed [63:0] result
    );
  wire [191:0] c$arg;

  assign c$arg = {c$arg_0,   c$arg_1,
                  c$arg_2};

  wire [191:0] vec;
  wire signed [63:0] acc_2_0;
  wire signed [63:0] acc_1;
  wire signed [63:0] acc_2;
  wire signed [63:0] acc_1_0;
  wire signed [63:0] acc_3;
  assign result = acc_2_0;

  assign vec = c$arg;

  assign acc_1 = $signed(vec[191:128]);

  assign acc_2 = $signed(vec[127:64]);

  assign acc_3 = $signed(vec[63:0]);

  wire signed [63:0] x1;
  wire signed [63:0] y1;
  reg signed [63:0] c$case_alt;
  wire signed [63:0] c$case_alt_selection_res;
  assign acc_1_0 = c$case_alt;

  assign x1 = acc_1;

  assign y1 = acc_2;

  assign c$case_alt_selection_res = (x1 <= y1) ? 64'sd1 : 64'sd0;

  always @(*) begin
    case(c$case_alt_selection_res)
      64'sd1 : c$case_alt = acc_1;
      default : c$case_alt = acc_2;
    endcase
  end



  wire signed [63:0] x1_1;
  wire signed [63:0] y1_1;
  reg signed [63:0] c$case_alt_3;
  wire signed [63:0] c$case_alt_selection_res_0;
  assign acc_2_0 = c$case_alt_3;

  assign x1_1 = acc_1_0;

  assign y1_1 = acc_3;

  assign c$case_alt_selection_res_0 = (x1_1 <= y1_1) ? 64'sd1 : 64'sd0;

  always @(*) begin
    case(c$case_alt_selection_res_0)
      64'sd1 : c$case_alt_3 = acc_1_0;
      default : c$case_alt_3 = acc_3;
    endcase
  end






endmodule

